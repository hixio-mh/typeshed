from typing import Any, Optional

from ldap.controls import (
    KNOWN_RESPONSE_CONTROLS as KNOWN_RESPONSE_CONTROLS,
    LDAPControl as LDAPControl,
    RequestControl as RequestControl,
    ResponseControl as ResponseControl,
)

class ValueLessRequestControl(RequestControl):
    controlType: Any = ...
    criticality: Any = ...
    def __init__(self, controlType: Optional[Any] = ..., criticality: bool = ...) -> None: ...
    def encodeControlValue(self) -> None: ...

class OctetStringInteger(LDAPControl):
    controlType: Any = ...
    criticality: Any = ...
    integerValue: Any = ...
    def __init__(self, controlType: Optional[Any] = ..., criticality: bool = ..., integerValue: Optional[Any] = ...) -> None: ...
    def encodeControlValue(self): ...
    def decodeControlValue(self, encodedControlValue: Any) -> None: ...

class BooleanControl(LDAPControl):
    boolean2ber: Any = ...
    ber2boolean: Any = ...
    controlType: Any = ...
    criticality: Any = ...
    booleanValue: Any = ...
    def __init__(self, controlType: Optional[Any] = ..., criticality: bool = ..., booleanValue: bool = ...) -> None: ...
    def encodeControlValue(self): ...
    def decodeControlValue(self, encodedControlValue: Any) -> None: ...

class ManageDSAITControl(ValueLessRequestControl):
    def __init__(self, criticality: bool = ...) -> None: ...

class RelaxRulesControl(ValueLessRequestControl):
    def __init__(self, criticality: bool = ...) -> None: ...

class ProxyAuthzControl(RequestControl):
    def __init__(self, criticality: Any, authzId: Any) -> None: ...

class AuthorizationIdentityRequestControl(ValueLessRequestControl):
    controlType: str = ...
    def __init__(self, criticality: Any) -> None: ...

class AuthorizationIdentityResponseControl(ResponseControl):
    controlType: str = ...
    authzId: Any = ...
    def decodeControlValue(self, encodedControlValue: Any) -> None: ...

class GetEffectiveRightsControl(RequestControl):
    def __init__(self, criticality: Any, authzId: Optional[Any] = ...) -> None: ...
