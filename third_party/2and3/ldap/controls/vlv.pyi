from typing import Any, Optional

from ldap.controls import RequestControl, ResponseControl
from pyasn1.type import univ

class ByOffsetType(univ.Sequence):
    tagSet: Any = ...
    componentType: Any = ...

class TargetType(univ.Choice):
    componentType: Any = ...

class VirtualListViewRequestType(univ.Sequence):
    componentType: Any = ...

class VLVRequestControl(RequestControl):
    controlType: str = ...
    before_count: Any = ...
    after_count: Any = ...
    offset: Any = ...
    content_count: Any = ...
    greater_than_or_equal: Any = ...
    context_id: Any = ...
    def __init__(
        self,
        criticality: bool = ...,
        before_count: int = ...,
        after_count: int = ...,
        offset: Optional[Any] = ...,
        content_count: Optional[Any] = ...,
        greater_than_or_equal: Optional[Any] = ...,
        context_id: Optional[Any] = ...,
    ) -> None: ...
    def encodeControlValue(self): ...

class VirtualListViewResultType(univ.Enumerated):
    namedValues: Any = ...

class VirtualListViewResponseType(univ.Sequence):
    componentType: Any = ...

class VLVResponseControl(ResponseControl):
    controlType: str = ...
    def __init__(self, criticality: bool = ...) -> None: ...
    targetPosition: Any = ...
    contentCount: Any = ...
    virtualListViewResult: Any = ...
    contextID: Any = ...
    target_position: Any = ...
    content_count: Any = ...
    result: Any = ...
    context_id: Any = ...
    def decodeControlValue(self, encoded: Any) -> None: ...
