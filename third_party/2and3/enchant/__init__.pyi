from typing import Any, List, Tuple

from enchant.errors import *
from enchant.pypwl import PyPWL as PyPWL
from enchant.utils import (
    EnchantStr as EnchantStr,
    UTF16EnchantStr as UTF16EnchantStr,
    get_default_language as get_default_language,
)

class warnings:
    def warn(self, *args: Any, **kwds: Any) -> None: ...

class ProviderDesc:
    name: str = ...
    desc: str = ...
    file: str = ...
    def __init__(self, name: str, desc: str, file: str) -> None: ...
    def __eq__(self, pd: Any) -> bool: ...
    def __hash__(self) -> int: ...

class _EnchantObject:
    def __init__(self) -> None: ...

class Broker(_EnchantObject):
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def request_dict(self, tag: str = ...) -> Dict: ...
    def request_pwl_dict(self, pwl: str) -> Dict: ...
    def dict_exists(self, tag: str) -> bool: ...
    def set_ordering(self, tag: str, ordering: str) -> None: ...
    def describe(self) -> List[ProviderDesc]: ...
    def list_dicts(self) -> List[Tuple[str, ProviderDesc]]: ...
    def list_languages(self) -> List[str]: ...
    def get_param(self, name: str) -> Any: ...
    def set_param(self, name: str, value: Any) -> None: ...

class Dict(_EnchantObject):
    provider: ProviderDesc = ...
    tag: str = ...
    def __init__(self, tag: str = ..., broker: Broker = ...) -> None: ...
    def __del__(self) -> None: ...
    def check(self, word: str) -> bool: ...
    def suggest(self, word: str) -> List[str]: ...
    def add(self, word: str) -> None: ...
    def remove(self, word: str) -> None: ...
    def add_to_pwl(self, word: str) -> None: ...
    def add_to_session(self, word: str) -> None: ...
    def remove_from_session(self, word: str) -> None: ...
    def is_added(self, word: str) -> bool: ...
    def is_removed(self, word: str) -> bool: ...
    def store_replacement(self, mis: str, cor: str) -> None: ...

class DictWithPWL(Dict):
    pwl: Dict = ...
    pel: Dict = ...
    def __init__(self, tag: str, pwl: str = ..., pel: str = ..., broker: Broker = ...) -> None: ...
    def check(self, word: str) -> bool: ...
    def suggest(self, word: str) -> List[str]: ...
    def add(self, word: str) -> None: ...
    def remove(self, word: str) -> None: ...
    def add_to_pwl(self, word: str) -> None: ...
    def is_added(self, word: str) -> bool: ...
    def is_removed(self, word: str) -> bool: ...

def request_dict(self, tag: str = ...) -> Dict: ...
def request_pwl_dict(self, pwl: str) -> Dict: ...
def dict_exists(tag: str) -> bool: ...
def list_dicts() -> List[Tuple[str, ProviderDesc]]: ...
def list_languages() -> List[str]: ...
def get_param(name: str) -> Any: ...
def set_param(name: str, value: Any) -> None: ...
def get_enchant_version() -> str: ...
def set_prefix_dir(path: str) -> None: ...
def get_user_config_dir() -> str: ...
